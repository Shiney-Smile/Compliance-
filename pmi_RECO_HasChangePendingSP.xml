<AML>
 <Item type="SQL" id="11BE5305168C4FF597811A8079E09B9D" action="add">
  <execution_flag>immediate</execution_flag>
  <old_name>pmi_RECO_HasChangePending</old_name>
  <sqlserver_body><![CDATA[create procedure pmi_RECO_HasChangePending(@itemTypeNameDbName nvarchar(32), @itemID char(32), @ignoreAffectedItemID char(32))
AS              
BEGIN
	DECLARE @pendingChangesCounter int
	
	IF @itemTypeNameDbName IS NULL OR @itemTypeNameDbName = '' BEGIN
		SET @itemTypeNameDbName = '[' +
			(
			select instance_data from [ITEMTYPE] where ID = 
				(
				select itemtype from [pmi_RECO_PolyItem] where ID = @itemID
				)
			) + ']'
	END
			
	SET @pendingChangesCounter =
	(
	select COUNT(ai.ID) from [pmi_RECO_AffectedItem] ai 
	where 
		(
		ai.AFFECTED_ID = @itemID
		OR 
		ai.NEW_ITEM_ID = @itemID
		)
		AND
		ai.id <> @ignoreAffectedItemID
		AND
		(
		EXISTS(select eeco.id from [pmi_RegulatoryChangeOrder] eeco where eeco.id = (select SOURCE_ID from [pmi_RECO_AffectedItem] where ID = ai.id) AND (eeco.STATE <> N'Released' AND eeco.STATE <> N'Cancelled' OR eeco.STATE IS NULL)))
	)
	DECLARE @SQLstr nvarchar(500)
	DECLARE @ParmDefinition nvarchar(500);
	SET @ParmDefinition = N'@id char(32), @count int';

	SET @SQLstr = N'UPDATE ' + @itemTypeNameDbName + ' 
	SET HAS_CHANGE_PENDING = CASE 
		WHEN @count > 0 
			THEN ''1''
			ELSE ''0'' 
		END
	WHERE ID=@id';
  
	EXECUTE sp_executesql @SQLstr, @ParmDefinition, @id=@itemID, @count=@pendingChangesCounter
END]]></sqlserver_body>
  <stale>0</stale>
  <transform_first>0</transform_first>
  <type>procedure</type>
  <name>pmi_RECO_HasChangePending</name>
 </Item>
</AML>